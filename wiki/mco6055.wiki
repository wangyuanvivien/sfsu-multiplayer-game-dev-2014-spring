Marco Chin
=Natural Environment/ Server Team=

=1. Requirements=

=Natural Environment requirements:=
	The game shall implement the use of types of environments, disasters, season changes, and diseases, listed in ascending priority.

=Priorities= 
=1 - Must have, don’t launch without=

*1.	Types of Environments*
                a.	Desert

                b.	Jungle

                c.	Grasslands

                d.	Arctic

*2.      Disasters*
                a.	Fire

                b.	Flood

=2 - Good to have=
*1.	Seasons*

        a.	Spring

        b.	Summer

        c.	Fall

        d.	Winter

*2.	Events*
        a.	Rain

=3 - Nice to have, but only if there’s time=
*1.	Diseases*

       a.	Animal Disease

       b.	Plant Disease

       c.	Terrain Disease(both animal and plant)

*2.   Other Disasters/Events*

       a.	Snowstorm

       b.	Hurricane

       c.	Drought

       d.	Earthquake

=Refined Version of Environments=
*1.      Desert*

       a. Is dry and has a limited water supply.  Only certain plants and animals can survive here.

       b. Vegetation Capacity: 200

*2.	Jungle*

       a. A very diverse biome filled with water and plants.  Very hard to maintain, as the diversity can cause difficulty in balancing.

       b. Vegetation Capacity: 800

*3.	Grasslands*

       a. Good plant-life, and fair diversity.  Water is clean, and is the more balanced biome overall.  Easy to maintain and disrupt the balance.

       b. Vegetation Capacity: 1000

*4.	Arctic*

       a. Clean water, high water specie variety, low plant-life.

       b. Vegetation Capacity: 400

=Types of seasons=

*1.	Spring*
       a.	Higher chance of rain/flooding
       b.	Higher rate of plant growth
*2.      Summer*
       a.	Higher chance of drought
       b.	Higher chance of wildfire
*2.      Fall*
       a.	Plant-life slowly decays
*3.	Winter*
       a.      Slower build and growth rates

=Disasters=
*1.	Flood*

	a. Is an event that affects plants and larger land animals.  Trees are not affected.

	b. This cannot be managed during its occurrence (have to let it run its course), and will have an icon representing it happening.

*2.	Fires*

	a. Depending on how we setup the game, fires will be natural, or player-spawned

	b.	 If natural, all players in a certain area will receive a notification regarding the fire

	c.	 Fires may spread to another tile if not contained by the tile’s owner(s)

	d. If users create fires, then the fire cannot spread, but rather continue to damage the tile until put out by the tile’s owner(s)




=Server Requirements:=

	The server shall take in and process requests, retrieve information from the database, and return the information back to the client. Server side shall have a clock and send disaster, season change, and disease responses to clients via the standard protocol. Since these changes can have an effect on environment score, the increased or decrease in biomass will be input into the simulation engine and return biomass of all species in the particular foodweb. High biomass will yield high environment score and vice-versa.
	

=2. Objects(subject to change)=
*EnvironmentController*
	Do we need this? 

*DisasterController*

	 public static String generateDisaster(int i)

  Takes in a number and spits out a disaster(String). When client recieves the disaster
  string "Fire" or "Flood", Unity should generate the disaster accordingly.
  Database and Protocal members please use these classes to communicate between
  database or client.

*SeasonController*

	 public static String generateSeason(int i)

  Takes in a number and spits out a season(String). When client recieves the season
  string "Spring" or "Summer", Unity should generate the Season accordingly.
  Database and Protocal members please use these classes to communicate between
  database and client. 

*DiseasesController*

	 public static String generateDisease(int i)

  Diseases are priority 3, not yet implemented
  Animal Disease, Plant Diesase, Terrain Disease(both animal and plant)
  Database and Protocal members please use these classes to communicate between
  database and client.

*EventsController*

	 public static String generateEvent(int i)

  Takes in a number and spits out an event(String). When client recieves the season
  string "Rain", Unity should generate the Rain accordingly. Events are the
  opposite of disasters and brings good benefits. This is not to be confused
  events in the core package.
  Database and Protocal members please use these classes to communicate between
  database and client.

=3. Milestones=
By 4/8 Finish 	EnvironmentController and DisasterController

By 5/6 Finish SeasonsController and DiseasesController